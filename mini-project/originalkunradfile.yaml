---
#Purpose of this file is to use ansible to set up Apache,Php and mysql. host is the name of servers, become is to give root privilege, vars is to rerefnce the variable file with our variables
- hosts: all
  become: yes
  vars_files:
          - vars/kunrad.yml
            
            #this first task is to ensure apt is installed on the system, update cache is used so if it already exist it doest have to run it again

  tasks:
          - name: Install Prerequisites
            apt: name={{ item }} state=latest force-apt_get=yes update-cache=yes
            loop: ['aptitude']

          
            #LAMP means linux, apache, mysql and php, this is used to install them all on the server

          - name: Install LAMP Packages
            apt: name={{ item }} state=latest force-apt-get=yes update_cache=yes
            loop: ['apache2', 'php', 'php-mysql', 'mysql-server', 'libapache2-mod-php', 'python3-pymsql']

            #create document rfile, copy the file into the path, it should be a directory and the owner should be the app user and the file permission should be the mode permission

          - name: Create Document Root
            file:
                    path: "/var/www/{{ http_host }}"
                    state: directory
                    owner: "{{ app_user }}"
                    mode: 0755
           
          - name: Setup Apache vhost
            template:
                    src: "files/apache.conf.j2"
                    dest: "/etc/apache2/sites-available/{{ http_conf }}"
                    notify: Reload Apache

          - name: Enable Apache site
            shell: /usr/sbin/a2ensite {{ http_conf }}
            notify: Reload Apache
            
            # this task will disable apache default site so the one i set up can run
          - name: Disable Apache default site
            shell: /usr/sbin/a2dissite 000-default.conf
            when: disable_default
            notify: Reload Apache

            #set up MYSQL and configurations
          - name: set the root "mysql-password"
            mysql_user:
                    name: root
                    password: "{{ mysql_root_password }}"
                    login_unix_socket: /var/run/mysqld/mysqld.sock

          - name: Remove all the MYSQL Database
            mysql_db:
                    name: test
                    state: absent
                    login_user: root
                    login-password: "{{ mysql_root_password }}"
                    
                     # this will create a new database after removing the default
          - name: Create a new MYSQL Database
            mysql_db:
                    name: altschool
                    state: present
                    login_user: root
                    login_password: "{{ mysql_root_password }}"

                     # create PHP info file

          - name: Create PHP info file
            copy:
                    src: files/info.php.j2
                    dest: /var/www/{{ http_host }}/info.php
                    owner: "{{ app_user }}"
                    mode: 0644
                    

                    handlers:
                            - name: Reload Apache
                              service:
                                      name=apache2
                                      state=reloaded

                            - name: Restart apache
                              service:
                                      name=apache2
                                      state=restarted
                                       
                                       # all the places where you have "notify" is what wer are using the handlers for       
