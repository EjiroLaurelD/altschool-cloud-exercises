---
#Purpose of this file is to use ansible to set up Apache,Php and mysql. host is the name of servers, become is to give root privilege, vars is to rerefnce the variable file with our variables
- hosts: all
  become: true
  vars_files:
          - vars/kunrad.yml            
  tasks:
          # - name: Install prerequisite
          # apt: name={{ item }} state=latest force_apt_get=yes update_cache=yes
          # loop: ['aptitude']


          - name: Install LAMP Packages
            apt:
                    name:
                            - apache2
                            - libapache2-mod-php  
                            - php8.1-mysql
                            - php8.1-curl
                            - php8.1-xml
                            - php8.1-opcache
                            - php8.1-common  
                            - php8.1-gd
                            - python3-pymysql
                            - php8.1-tokenizer
                            - php8.1-json
                            - php8.1-bcmath
                            - php8.1-mbstring
                            - php8.1-zip  
                            - git  

                    state: latest

          - name: Download php-composer
            get_url:
                    url: https://getcomposer.org/installer
                    dest: /tmp/installer

          - name: Install composer
            shell: cat /tmp/installer | php -- --install-dir=/usr/local/bin
            args:
                    creates: /usr/local/bin/composer
                    mode: 0755
                    state: file
                              
          - name: Create Document Root
            file:
                    path: "/var/www/{{ http_hosts }}"
                    state: directory
                    owner: "{{ app_user }}"
                    mode: 0755
           
          - name: Setup Apache vhost
            template:
                    src: "apache.conf.j2"
                    dest: "/etc/apache2/sites-available/{{ http_conf }}"
                    mode: "0755"
                    notifiy: Reload Apache


          - name: Enable Apache site
            shell: /usr/sbin/a2ensite "{{ http_conf }}"
            notify: Reload Apache
            
            # this task will disable apache default site
          - name: Disable Apache default site
            shell: /usr/sbin/a2dissite 000-default.conf
            when: disable_default
            notify: Restart Apache

                     # create PHP info file

          - name: Create PHP info file
            copy:
                    
                    src: info.php.j2
                    dest: /var/www/{{ http_hosts }}/info.php
                    owner: "{{ app_user }}"
                    mode: 0644
                    

                    handlers:
                            - name: Reload Apache
                              service:
                                      name: apache2
                                      state: reloaded

                            - name: Restart Apache
                              service:
                                      name: apache2
                                      state: restarted
